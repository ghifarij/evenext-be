generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum EventCategory {
  Konser
  Seminar
  Olahraga
  Expo
}

enum EventLocation {
  Bandung
  Jakarta
  Surabaya
  Bali
}

enum TicketCategory {
  Free
  EarlyBird
  Regular
  VIP
}

enum StatusOrder {
  Pending
  Paid
  Cancel
}

model User {
  id          String   @id @default(uuid())
  username    String   @unique
  email       String   @unique
  password    String
  avatar      String   @default("https://res.cloudinary.com/dgsz2pael/image/upload/v1733381132/blank-profile_sunr5j.webp")
  isVerify    Boolean  @default(false)
  ref_code    String?  @unique
  referred_by String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  User_Point User_Point[]

  User_Coupon User_Coupon[]

  Order Order[]

  Review Review[]
}

model User_Point {
  id        Int      @id @default(autoincrement())
  point     Int      @default(10000)
  createdAt DateTime @default(now())
  expiredAt DateTime
  isRedeem  Boolean  @default(false)
  userId    String
  user      User     @relation(fields: [userId], references: [id])
}

model User_Coupon {
  id         Int      @id @default(autoincrement())
  isRedeem   Boolean  @default(false)
  percentage Int      @default(10)
  createdAt  DateTime @default(now())
  expiredAt  DateTime
  userId     String
  user       User     @relation(fields: [userId], references: [id])
}

model Promotor {
  id        String   @id @default(uuid())
  username  String   @unique
  email     String   @unique
  password  String
  avatar    String   @default("https://res.cloudinary.com/dgsz2pael/image/upload/v1733381132/blank-profile_sunr5j.webp")
  isVerify  Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Event Event[]
}

model Event {
  id          Int           @id @default(autoincrement())
  title       String        @unique
  slug        String        @unique
  thumbnail   String        @default("https://res.cloudinary.com/dgsz2pael/image/upload/v1733734320/picture-2008484_1280_weralp.png")
  description String
  terms       String
  category    EventCategory
  location    EventLocation
  venue       String
  date        DateTime      @db.Date
  time        DateTime      @db.Time()
  createdAt   DateTime      @default(now())
  promotorId  String
  promotor    Promotor      @relation(fields: [promotorId], references: [id])

  Ticket Ticket[]

  Review Review[]
}

model Ticket {
  id        Int            @id @default(autoincrement())
  category  TicketCategory
  seats     Int
  price     Int
  createdAt DateTime       @default(now())
  eventId   Int
  event     Event          @relation(fields: [eventId], references: [id])

  Order_Details Order_Details[]
}

model Order {
  id           Int         @id @default(autoincrement())
  total_price  Int
  final_price  Int
  status       StatusOrder
  redirect_url String?
  createdAt    DateTime    @default(now())
  expiredAt    DateTime
  userId       String
  user         User        @relation(fields: [userId], references: [id])

  Order_Details Order_Details[]
}

model Order_Details {
  id       Int    @id @default(autoincrement())
  ticketId Int
  qty      Int
  orderId  Int
  ticket   Ticket @relation(fields: [ticketId], references: [id])
  order    Order  @relation(fields: [orderId], references: [id])
}

model Review {
  id          Int    @id @default(autoincrement())
  description String
  rating      Int
  userId      String
  eventId     Int
  user        User   @relation(fields: [userId], references: [id])
  event       Event  @relation(fields: [eventId], references: [id])
}
