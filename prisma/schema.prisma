generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum EventCategory {
  Konser
  Seminar
  Olahraga
  Expo
}

enum EventLocation {
  Bandung
  Jakarta
  Surabaya
  Bali
}

enum EventStatus {
  active
  finish
}

enum TicketCategory {
  Free
  EarlyBird
  Regular
  VIP
}

enum StatusOrder {
  Pending
  Paid
  Cancel
}

model User {
  email       String   @unique
  password    String
  avatar      String   @default("https://res.cloudinary.com/dgsz2pael/image/upload/v1733381132/blank-profile_sunr5j.webp")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  id          String   @id @default(uuid())
  isVerify    Boolean  @default(false)
  ref_code    String?  @unique
  username    String   @unique
  referred_by String?
  User_Coupon Coupon[]
  Order       Order[]
  User_Point  Point[]
  Review      Review[]
}

model Point {
  id        Int      @id @default(autoincrement())
  point     Int      @default(10000)
  createdAt DateTime @default(now())
  expiredAt DateTime
  isActive  Boolean  @default(true)
  userId    String
  user      User     @relation(fields: [userId], references: [id])
}

model Coupon {
  id        Int      @id @default(autoincrement())
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  expiredAt DateTime
  userId    String
  user      User     @relation(fields: [userId], references: [id])
}

model Promotor {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  avatar    String   @default("https://res.cloudinary.com/dgsz2pael/image/upload/v1733381132/blank-profile_sunr5j.webp")
  isVerify  Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  username  String   @unique
  Event     Event[]
}

model Event {
  id          Int           @id @default(autoincrement())
  title       String        @unique
  description String
  terms       String
  category    EventCategory
  location    EventLocation
  venue       String
  date        DateTime      @db.Date
  createdAt   DateTime      @default(now())
  promotorId  String
  thumbnail   String        @default("https://res.cloudinary.com/dgsz2pael/image/upload/v1733734320/picture-2008484_1280_weralp.png")
  slug        String        @unique
  time        DateTime      @db.Time(6)
  status      EventStatus   @default(active)
  promotor    Promotor      @relation(fields: [promotorId], references: [id])
  Review      Review[]
  Ticket      Ticket[]
}

model Ticket {
  id            Int             @id @default(autoincrement())
  category      TicketCategory
  seats         Int
  price         Int
  createdAt     DateTime        @default(now())
  eventId       Int
  Order_Details Order_Details[]
  event         Event           @relation(fields: [eventId], references: [id])
}

model Order {
  id            Int             @id @default(autoincrement())
  total_price   Int
  final_price   Int
  status        StatusOrder
  createdAt     DateTime        @default(now())
  userId        String
  expiredAt     DateTime
  coupon        Boolean         @default(false)
  point         Int             @default(0)
  user          User            @relation(fields: [userId], references: [id])
  Order_Details Order_Details[]
}

model Order_Details {
  ticketId Int
  qty      Int
  orderId  Int
  subtotal Int
  order    Order  @relation(fields: [orderId], references: [id])
  ticket   Ticket @relation(fields: [ticketId], references: [id])

  @@id([orderId, ticketId])
}

model Review {
  userId  String
  eventId Int

  description String
  rating      Int
  createdAt   DateTime @default(now())
  user        User     @relation(fields: [userId], references: [id])
  event       Event    @relation(fields: [eventId], references: [id])

  @@id([userId, eventId])
}
